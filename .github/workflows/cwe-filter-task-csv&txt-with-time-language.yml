name: cwe-filter-task-csv&txt

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      languages:
        description: 'Comma-separated programming languages (e.g. Java,Python,C#)'
        required: true
        default: 'Java,Python'
      mode:
        description: 'Filter mode (or/and)'
        required: true
        default: 'or'

jobs:
  filter-cwe:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build filtered_cwe output filenames and params
        id: fname
        run: |
          # 
          if [ -n "${{ github.event.inputs.languages }}" ]; then
            LANGS="${{ github.event.inputs.languages }}"
          else
            LANGS=$(head -1 .github/cwe_languages.txt)
          fi

          if [ -n "${{ github.event.inputs.mode }}" ]; then
            MODE="${{ github.event.inputs.mode }}"
          else
            if [ -f .github/cwe_languages.txt ]; then
              MODE=$(sed -n '2p' .github/cwe_languages.txt)
              if [ -z "$MODE" ]; then
                MODE="or"
              fi
            else
              MODE="or"
            fi
          fi

          LANGS_LOWER=$(echo "$LANGS" | tr '[:upper:]' '[:lower:]' | tr ',' '_')
          OUTNAME="filtered_cwe_${LANGS_LOWER}_${MODE}_$(date +%Y%m%d_%H%M%S).txt"
          CSVNAME="${OUTNAME%.txt}.csv"
          echo "OUTNAME=$OUTNAME" >> $GITHUB_ENV
          echo "CSVNAME=$CSVNAME" >> $GITHUB_ENV
          echo "LANGS=$LANGS" >> $GITHUB_ENV
          echo "MODE=$MODE" >> $GITHUB_ENV
      

      - name: Run CWE Filter Script (custom params)
        run: |
          python filter_cwe.py --languages "$LANGS" --mode "$MODE" --output "$OUTNAME"

      - name: Upload TXT artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTNAME }}
          path: ${{ env.OUTNAME }}

      - name: Upload CSV artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.CSVNAME }}
          path: ${{ env.CSVNAME }}

      - name: (Optional) Run tests
        run: pytest tests/
